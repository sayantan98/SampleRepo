{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"mdb-angular-ui-kit/modal\";\nimport * as i2 from \"src/app/shared.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-spinner\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nfunction AddEditComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(6);\n      return i0.ɵɵresetView(ctx_r3.Save(_r0));\n    });\n    i0.ɵɵtext(1, \"Save changes\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.Update());\n    });\n    i0.ɵɵtext(1, \"Update changes\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddEditComponent {\n  constructor(modalRef, service, toastr, router, loader) {\n    this.modalRef = modalRef;\n    this.service = service;\n    this.toastr = toastr;\n    this.router = router;\n    this.loader = loader;\n    this.title = '';\n  }\n  ngOnInit() {}\n  Save(heroForm) {\n    this.loader.show();\n    if (heroForm.valid) {\n      this.service.InsertDepartment(this.dep).subscribe(res => {\n        this.toastr.success(res, 'Insert Completed!');\n        this.modalRef.close();\n        this.loader.hide();\n      }, error => {\n        this.toastr.error(error.statusText, \"Error!\");\n        this.loader.hide();\n      });\n    } else {\n      this.toastr.warning(\"Please enter all the data\", \"Warning\");\n      this.loader.hide();\n    }\n  }\n  Update() {\n    this.loader.show();\n    this.service.UpdateDepartment(this.dep).subscribe(res => {\n      this.toastr.success(res, 'Update Completed!');\n      this.modalRef.close();\n      this.loader.hide();\n    }, error => {\n      this.toastr.error(error.statusText, \"Error!\");\n      this.loader.hide();\n    });\n  }\n}\nAddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n  return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.MdbModalRef), i0.ɵɵdirectiveInject(i2.SharedService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.NgxSpinnerService));\n};\nAddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditComponent,\n  selectors: [[\"app-add-edit\"]],\n  decls: 16,\n  vars: 4,\n  consts: [[1, \"modal-header\", 2, \"background-color\", \"rgb(130, 125, 125)\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [\"heroForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"exampleInputPassword1\"], [\"type\", \"text\", \"id\", \"departmentName\", \"name\", \"departmentName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AddEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_3_listener() {\n        return ctx.modalRef.close();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", null, 4)(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Department Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEditComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.dep.departmentName = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_12_listener() {\n        return ctx.modalRef.close();\n      });\n      i0.ɵɵtext(13, \" Close \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, AddEditComponent_button_14_Template, 2, 0, \"button\", 10);\n      i0.ɵɵtemplate(15, AddEditComponent_button_15_Template, 2, 0, \"button\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.dep.departmentName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.dep.departmentId == 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.dep.departmentId != 0);\n    }\n  },\n  dependencies: [i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.NgModel, i7.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;IAqBIA,kCAAmG;IAAzBA;MAAAA;MAAA;MAAA;MAAA,OAASA,+BAAc;IAAA,EAAC;IAACA,4BAAY;IAAAA,iBAAS;;;;;;IACxHA,kCAA6F;IAAnBA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAACA,8BAAc;IAAAA,iBAAS;;;ACRxH,OAAM,MAAOC,gBAAgB;EAG3BC,YACSC,QAAuC,EACtCC,OAAsB,EACtBC,MAAqB,EACrBC,MAAc,EACdC,MAAyB;IAJ1B,aAAQ,GAARJ,QAAQ;IACP,YAAO,GAAPC,OAAO;IACP,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IACN,WAAM,GAANC,MAAM;IAPT,UAAK,GAAW,EAAE;EAQlB;EACPC,QAAQ,IAER;EACAC,IAAI,CAACC,QAAgB;IACnB,IAAI,CAACH,MAAM,CAACI,IAAI,EAAE;IAClB,IAAGD,QAAQ,CAACE,KAAK,EAAC;MAChB,IAAI,CAACR,OAAO,CAACS,gBAAgB,CAAC,IAAI,CAACC,GAAG,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;QACtD,IAAI,CAACX,MAAM,CAACY,OAAO,CAACD,GAAG,EAAE,mBAAmB,CAAC;QAC7C,IAAI,CAACb,QAAQ,CAACe,KAAK,EAAE;QACrB,IAAI,CAACX,MAAM,CAACY,IAAI,EAAE;MACpB,CAAC,EACDC,KAAK,IAAG;QACN,IAAI,CAACf,MAAM,CAACe,KAAK,CAACA,KAAK,CAACC,UAAU,EAAE,QAAQ,CAAC;QAC7C,IAAI,CAACd,MAAM,CAACY,IAAI,EAAE;MACpB,CAAC,CAAC;KACH,MACG;MACF,IAAI,CAACd,MAAM,CAACiB,OAAO,CAAC,2BAA2B,EAAC,SAAS,CAAC;MAC1D,IAAI,CAACf,MAAM,CAACY,IAAI,EAAE;;EAEtB;EACAI,MAAM;IACJ,IAAI,CAAChB,MAAM,CAACI,IAAI,EAAE;IAClB,IAAI,CAACP,OAAO,CAACoB,gBAAgB,CAAC,IAAI,CAACV,GAAG,CAAC,CAACC,SAAS,CAACC,GAAG,IAAG;MACtD,IAAI,CAACX,MAAM,CAACY,OAAO,CAACD,GAAG,EAAE,mBAAmB,CAAC;MAC7C,IAAI,CAACb,QAAQ,CAACe,KAAK,EAAE;MACrB,IAAI,CAACX,MAAM,CAACY,IAAI,EAAE;IACpB,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACf,MAAM,CAACe,KAAK,CAACA,KAAK,CAACC,UAAU,EAAE,QAAQ,CAAC;MAC7C,IAAI,CAACd,MAAM,CAACY,IAAI,EAAE;IACpB,CAAC,CAAC;EACJ;;AA1CWlB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDd7B7B,8BAAwE;MACrBA,YAAS;MAAAA,iBAAK;MAC7DA,iCAKC;MADCA;QAAA,OAAS8B,oBAAgB;MAAA,EAAC;MAC3B9B,iBAAS;MAEZA,8BAAwB;MAGiBA,+BAAe;MAAAA,iBAAQ;MAC1DA,iCAAmH;MAAvDA;QAAA;MAAA,EAAgC;MAA5FA,iBAAmH;MAIzHA,+BAA0B;MACwBA;QAAA,OAAS8B,oBAAgB;MAAA,EAAC;MACxE9B,wBACF;MAAAA,iBAAS;MACTA,0EAAwH;MACxHA,0EAAoH;MACtHA,iBAAM;;;MAtB2CA,eAAS;MAATA,+BAAS;MAYQA,eAAgC;MAAhCA,gDAAgC;MAQjDA,eAAyB;MAAzBA,gDAAyB;MACzBA,eAAyB;MAAzBA,gDAAyB","names":["i0","AddEditComponent","constructor","modalRef","service","toastr","router","loader","ngOnInit","Save","heroForm","show","valid","InsertDepartment","dep","subscribe","res","success","close","hide","error","statusText","warning","Update","UpdateDepartment","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Upskill\\PracticeProjects\\Sample-Components\\src\\app\\department\\add-edit\\add-edit.component.html","D:\\Upskill\\PracticeProjects\\Sample-Components\\src\\app\\department\\add-edit\\add-edit.component.ts"],"sourcesContent":["<div class=\"modal-header\" style=\"background-color: rgb(130, 125, 125);\">\n    <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{title}}</h5>\n    <button\n      type=\"button\"\n      class=\"btn-close\"\n      aria-label=\"Close\"\n      (click)=\"modalRef.close()\"\n    ></button>\n  </div>\n  <div class=\"modal-body\">\n    <form #heroForm=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Department Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"departmentName\" [(ngModel)]=\"dep.departmentName\" name=\"departmentName\">\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modalRef.close()\">\n      Close\n    </button>\n    <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"dep.departmentId==0\" (click)=\"Save(heroForm)\">Save changes</button>\n    <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"dep.departmentId!=0\" (click)=\"Update()\">Update changes</button>\n  </div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MdbModalRef } from 'mdb-angular-ui-kit/modal';\nimport { SharedService } from 'src/app/shared.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { ShowDelComponent } from '../show-del/show-del.component';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-edit',\n  templateUrl: './add-edit.component.html',\n  styleUrls: ['./add-edit.component.css']\n})\nexport class AddEditComponent implements OnInit {\n  public title: string = '';\n  public dep: any;\n  constructor(\n    public modalRef: MdbModalRef<AddEditComponent>,\n    private service: SharedService,\n    private toastr: ToastrService,\n    private router: Router,\n    private loader: NgxSpinnerService\n    ) {  }\n  ngOnInit(): void {\n    \n  }\n  Save(heroForm: NgForm){\n    this.loader.show();\n    if(heroForm.valid){\n      this.service.InsertDepartment(this.dep).subscribe(res =>{\n        this.toastr.success(res, 'Insert Completed!');\n        this.modalRef.close();\n        this.loader.hide();\n      },\n      error => {\n        this.toastr.error(error.statusText, \"Error!\");\n        this.loader.hide();\n      });\n    }\n    else{\n      this.toastr.warning(\"Please enter all the data\",\"Warning\");\n      this.loader.hide();\n    }\n  }\n  Update(){\n    this.loader.show();\n    this.service.UpdateDepartment(this.dep).subscribe(res =>{\n      this.toastr.success(res, 'Update Completed!');\n      this.modalRef.close();\n      this.loader.hide();\n    },\n    error => {\n      this.toastr.error(error.statusText, \"Error!\");\n      this.loader.hide();\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}