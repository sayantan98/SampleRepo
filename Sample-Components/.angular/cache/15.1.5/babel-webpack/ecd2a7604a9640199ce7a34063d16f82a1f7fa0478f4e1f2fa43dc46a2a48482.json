{"ast":null,"code":"import { Subject, fromEvent } from 'rxjs';\nimport * as i2 from '@angular/cdk/portal';\nimport { CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Inject, ViewChild, HostBinding, TemplateRef, Injector, Injectable, NgModule } from '@angular/core';\nimport { filter, takeUntil, take } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nconst _c0 = [\"dialog\"];\nfunction MdbModalContainerComponent_ng_template_3_Template(rf, ctx) {}\nclass MdbModalConfig {\n  constructor() {\n    this.animation = true;\n    this.backdrop = true;\n    this.ignoreBackdropClick = false;\n    this.keyboard = true;\n    this.modalClass = '';\n    this.containerClass = '';\n    this.data = null;\n  }\n}\nclass MdbModalRef {\n  constructor(_overlayRef, _container) {\n    this._overlayRef = _overlayRef;\n    this._container = _container;\n    this.onClose$ = new Subject();\n    this.onClose = this.onClose$.asObservable();\n  }\n  close(message) {\n    this._container._close();\n    setTimeout(() => {\n      this._container._restoreScrollbar();\n      this.onClose$.next(message);\n      this.onClose$.complete();\n      this._overlayRef.detach();\n      this._overlayRef.dispose();\n    }, this._container.MODAL_TRANSITION);\n  }\n}\nclass MdbModalContainerComponent {\n  constructor(_document, _elementRef, _renderer, _focusTrapFactory) {\n    this._document = _document;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._destroy$ = new Subject();\n    this.backdropClick$ = new Subject();\n    this.BACKDROP_TRANSITION = 150;\n    this.MODAL_TRANSITION = 200;\n    this.modal = true;\n  }\n  get hasAnimation() {\n    return this._config.animation;\n  }\n  ngOnInit() {\n    this._updateContainerClass();\n    this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'block');\n    this._previouslyFocusedElement = this._document.activeElement;\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    if (this._config.animation) {\n      setTimeout(() => {\n        this._renderer.addClass(this._elementRef.nativeElement, 'show');\n        setTimeout(() => {\n          this._focusTrap.focusInitialElementWhenReady();\n        }, this.MODAL_TRANSITION);\n      }, this.BACKDROP_TRANSITION);\n    } else {\n      this._focusTrap.focusInitialElementWhenReady();\n    }\n  }\n  ngAfterViewInit() {\n    const widthWithVerticalScroll = this._document.body.offsetWidth;\n    this._renderer.addClass(this._document.body, 'modal-open');\n    const widthWithoutVerticalScroll = this._document.body.offsetWidth;\n    this._renderer.setStyle(this._document.body, 'padding-right', `${widthWithoutVerticalScroll - widthWithVerticalScroll}px`);\n    if (!this._config.ignoreBackdropClick) {\n      fromEvent(this._elementRef.nativeElement, 'mousedown').pipe(filter(event => {\n        const target = event.target;\n        const dialog = this.modalDialog.nativeElement;\n        const notDialog = target !== dialog;\n        const notDialogContent = !dialog.contains(target);\n        return notDialog && notDialogContent;\n      }), takeUntil(this._destroy$)).subscribe(event => {\n        this.backdropClick$.next(event);\n      });\n    }\n  }\n  ngOnDestroy() {\n    this._previouslyFocusedElement.focus();\n    this._focusTrap.destroy();\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n  _updateContainerClass() {\n    if (this._config.containerClass === '' || this._config.containerClass.length && this._config.containerClass.length === 0) {\n      return;\n    }\n    const containerClasses = this._config.containerClass.split(' ');\n    containerClasses.forEach(containerClass => {\n      this._renderer.addClass(this._elementRef.nativeElement, containerClass);\n    });\n  }\n  _close() {\n    if (this._config.animation) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'show');\n    }\n    // Pause iframe/video when closing modal\n    const iframeElements = Array.from(this._elementRef.nativeElement.querySelectorAll('iframe'));\n    const videoElements = Array.from(this._elementRef.nativeElement.querySelectorAll('video'));\n    iframeElements.forEach(iframe => {\n      const srcAttribute = iframe.getAttribute('src');\n      this._renderer.setAttribute(iframe, 'src', srcAttribute);\n    });\n    videoElements.forEach(video => {\n      video.pause();\n    });\n  }\n  _restoreScrollbar() {\n    this._renderer.removeClass(this._document.body, 'modal-open');\n    this._renderer.removeStyle(this._document.body, 'padding-right');\n  }\n  attachComponentPortal(portal) {\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n  attachTemplatePortal(portal) {\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n}\nMdbModalContainerComponent.ɵfac = function MdbModalContainerComponent_Factory(t) {\n  return new (t || MdbModalContainerComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.ConfigurableFocusTrapFactory));\n};\nMdbModalContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MdbModalContainerComponent,\n  selectors: [[\"mdb-modal-container\"]],\n  viewQuery: function MdbModalContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalDialog = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function MdbModalContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"modal\", ctx.modal)(\"fade\", ctx.hasAnimation);\n    }\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[\"dialog\", \"\"], [1, \"modal-content\"], [\"cdkPortalOutlet\", \"\"]],\n  template: function MdbModalContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", null, 0)(2, \"div\", 1);\n      i0.ɵɵtemplate(3, MdbModalContainerComponent_ng_template_3_Template, 0, 0, \"ng-template\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(\"modal-dialog\" + (ctx._config.modalClass ? \" \" + ctx._config.modalClass : \"\"));\n    }\n  },\n  dependencies: [i2.CdkPortalOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbModalContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mdb-modal-container',\n      changeDetection: ChangeDetectionStrategy.Default,\n      template: \"<div #dialog [class]=\\\"'modal-dialog' + (_config.modalClass ? ' ' + _config.modalClass : '')\\\">\\n  <div class=\\\"modal-content\\\">\\n    <ng-template cdkPortalOutlet></ng-template>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.ConfigurableFocusTrapFactory\n    }];\n  }, {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }],\n    modalDialog: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    modal: [{\n      type: HostBinding,\n      args: ['class.modal']\n    }],\n    hasAnimation: [{\n      type: HostBinding,\n      args: ['class.fade']\n    }]\n  });\n})();\nclass MdbModalService {\n  constructor(_document, _overlay, _injector, _cfr) {\n    this._document = _document;\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._cfr = _cfr;\n  }\n  open(componentOrTemplateRef, config) {\n    const defaultConfig = new MdbModalConfig();\n    config = config ? Object.assign(defaultConfig, config) : defaultConfig;\n    const overlayRef = this._createOverlay(config);\n    const container = this._createContainer(overlayRef, config);\n    const modalRef = this._createContent(componentOrTemplateRef, container, overlayRef, config);\n    this._registerListeners(modalRef, config, container);\n    return modalRef;\n  }\n  _createOverlay(config) {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n  _getOverlayConfig(modalConfig) {\n    const config = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: this._overlay.scrollStrategies.noop(),\n      hasBackdrop: modalConfig.backdrop,\n      backdropClass: 'mdb-backdrop'\n    });\n    return config;\n  }\n  _createContainer(overlayRef, config) {\n    const portal = new ComponentPortal(MdbModalContainerComponent, null, this._injector, this._cfr);\n    const containerRef = overlayRef.attach(portal);\n    containerRef.instance._config = config;\n    return containerRef.instance;\n  }\n  _createContent(componentOrTemplate, container, overlayRef, config) {\n    const modalRef = new MdbModalRef(overlayRef, container);\n    if (componentOrTemplate instanceof TemplateRef) {\n      container.attachTemplatePortal(new TemplatePortal(componentOrTemplate, null, {\n        $implicit: config.data,\n        modalRef\n      }));\n    } else {\n      const injector = this._createInjector(config, modalRef, container);\n      const contentRef = container.attachComponentPortal(new ComponentPortal(componentOrTemplate, config.viewContainerRef, injector));\n      if (config.data) {\n        Object.assign(contentRef.instance, {\n          ...config.data\n        });\n      }\n    }\n    return modalRef;\n  }\n  _createInjector(config, modalRef, container) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    // The dialog container should be provided as the dialog container and the dialog's\n    // content are created out of the same `ViewContainerRef` and as such, are siblings\n    // for injector purposes. To allow the hierarchy that is expected, the dialog\n    // container is explicitly provided in the injector.\n    const providers = [{\n      provide: MdbModalContainerComponent,\n      useValue: container\n    }, {\n      provide: MdbModalRef,\n      useValue: modalRef\n    }];\n    return Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    });\n  }\n  _registerListeners(modalRef, config, container) {\n    container.backdropClick$.pipe(take(1)).subscribe(() => {\n      modalRef.close();\n    });\n    if (config.keyboard) {\n      fromEvent(container._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n        return event.key === 'Escape';\n      }), take(1)).subscribe(() => {\n        modalRef.close();\n      });\n    }\n  }\n}\nMdbModalService.ɵfac = function MdbModalService_Factory(t) {\n  return new (t || MdbModalService)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ComponentFactoryResolver));\n};\nMdbModalService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MdbModalService,\n  factory: MdbModalService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbModalService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1$1.Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ComponentFactoryResolver\n    }];\n  }, null);\n})();\nclass MdbModalModule {}\nMdbModalModule.ɵfac = function MdbModalModule_Factory(t) {\n  return new (t || MdbModalModule)();\n};\nMdbModalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbModalModule\n});\nMdbModalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [MdbModalService],\n  imports: [OverlayModule, PortalModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbModalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, PortalModule],\n      exports: [MdbModalContainerComponent],\n      declarations: [MdbModalContainerComponent],\n      providers: [MdbModalService]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbModalConfig, MdbModalContainerComponent, MdbModalModule, MdbModalRef, MdbModalService };\n//# sourceMappingURL=mdb-angular-ui-kit-modal.mjs.map","map":{"version":3,"names":["Subject","fromEvent","i2","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","i0","Component","ChangeDetectionStrategy","Inject","ViewChild","HostBinding","TemplateRef","Injector","Injectable","NgModule","filter","takeUntil","take","DOCUMENT","i1","i1$1","OverlayConfig","OverlayModule","MdbModalConfig","constructor","animation","backdrop","ignoreBackdropClick","keyboard","modalClass","containerClass","data","MdbModalRef","_overlayRef","_container","onClose$","onClose","asObservable","close","message","_close","setTimeout","_restoreScrollbar","next","complete","detach","dispose","MODAL_TRANSITION","MdbModalContainerComponent","_document","_elementRef","_renderer","_focusTrapFactory","_destroy$","backdropClick$","BACKDROP_TRANSITION","modal","hasAnimation","_config","ngOnInit","_updateContainerClass","setStyle","nativeElement","_previouslyFocusedElement","activeElement","_focusTrap","create","addClass","focusInitialElementWhenReady","ngAfterViewInit","widthWithVerticalScroll","body","offsetWidth","widthWithoutVerticalScroll","pipe","event","target","dialog","modalDialog","notDialog","notDialogContent","contains","subscribe","ngOnDestroy","focus","destroy","length","containerClasses","split","forEach","removeClass","iframeElements","Array","from","querySelectorAll","videoElements","iframe","srcAttribute","getAttribute","setAttribute","video","pause","removeStyle","attachComponentPortal","portal","_portalOutlet","attachTemplatePortal","ɵfac","ElementRef","Renderer2","ConfigurableFocusTrapFactory","ɵcmp","type","args","selector","changeDetection","Default","template","undefined","decorators","static","MdbModalService","_overlay","_injector","_cfr","open","componentOrTemplateRef","config","defaultConfig","Object","assign","overlayRef","_createOverlay","container","_createContainer","modalRef","_createContent","_registerListeners","overlayConfig","_getOverlayConfig","modalConfig","positionStrategy","position","global","scrollStrategy","scrollStrategies","noop","hasBackdrop","backdropClass","containerRef","attach","instance","componentOrTemplate","$implicit","injector","_createInjector","contentRef","viewContainerRef","userInjector","providers","provide","useValue","parent","key","Overlay","ComponentFactoryResolver","ɵprov","MdbModalModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["D:/Upskill/PracticeProjects/Sample-Components/node_modules/mdb-angular-ui-kit/fesm2020/mdb-angular-ui-kit-modal.mjs"],"sourcesContent":["import { Subject, fromEvent } from 'rxjs';\nimport * as i2 from '@angular/cdk/portal';\nimport { CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Inject, ViewChild, HostBinding, TemplateRef, Injector, Injectable, NgModule } from '@angular/core';\nimport { filter, takeUntil, take } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nclass MdbModalConfig {\n    constructor() {\n        this.animation = true;\n        this.backdrop = true;\n        this.ignoreBackdropClick = false;\n        this.keyboard = true;\n        this.modalClass = '';\n        this.containerClass = '';\n        this.data = null;\n    }\n}\n\nclass MdbModalRef {\n    constructor(_overlayRef, _container) {\n        this._overlayRef = _overlayRef;\n        this._container = _container;\n        this.onClose$ = new Subject();\n        this.onClose = this.onClose$.asObservable();\n    }\n    close(message) {\n        this._container._close();\n        setTimeout(() => {\n            this._container._restoreScrollbar();\n            this.onClose$.next(message);\n            this.onClose$.complete();\n            this._overlayRef.detach();\n            this._overlayRef.dispose();\n        }, this._container.MODAL_TRANSITION);\n    }\n}\n\nclass MdbModalContainerComponent {\n    constructor(_document, _elementRef, _renderer, _focusTrapFactory) {\n        this._document = _document;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._destroy$ = new Subject();\n        this.backdropClick$ = new Subject();\n        this.BACKDROP_TRANSITION = 150;\n        this.MODAL_TRANSITION = 200;\n        this.modal = true;\n    }\n    get hasAnimation() {\n        return this._config.animation;\n    }\n    ngOnInit() {\n        this._updateContainerClass();\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'block');\n        this._previouslyFocusedElement = this._document.activeElement;\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        if (this._config.animation) {\n            setTimeout(() => {\n                this._renderer.addClass(this._elementRef.nativeElement, 'show');\n                setTimeout(() => {\n                    this._focusTrap.focusInitialElementWhenReady();\n                }, this.MODAL_TRANSITION);\n            }, this.BACKDROP_TRANSITION);\n        }\n        else {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    ngAfterViewInit() {\n        const widthWithVerticalScroll = this._document.body.offsetWidth;\n        this._renderer.addClass(this._document.body, 'modal-open');\n        const widthWithoutVerticalScroll = this._document.body.offsetWidth;\n        this._renderer.setStyle(this._document.body, 'padding-right', `${widthWithoutVerticalScroll - widthWithVerticalScroll}px`);\n        if (!this._config.ignoreBackdropClick) {\n            fromEvent(this._elementRef.nativeElement, 'mousedown')\n                .pipe(filter((event) => {\n                const target = event.target;\n                const dialog = this.modalDialog.nativeElement;\n                const notDialog = target !== dialog;\n                const notDialogContent = !dialog.contains(target);\n                return notDialog && notDialogContent;\n            }), takeUntil(this._destroy$))\n                .subscribe((event) => {\n                this.backdropClick$.next(event);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._previouslyFocusedElement.focus();\n        this._focusTrap.destroy();\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    _updateContainerClass() {\n        if (this._config.containerClass === '' ||\n            (this._config.containerClass.length && this._config.containerClass.length === 0)) {\n            return;\n        }\n        const containerClasses = this._config.containerClass.split(' ');\n        containerClasses.forEach((containerClass) => {\n            this._renderer.addClass(this._elementRef.nativeElement, containerClass);\n        });\n    }\n    _close() {\n        if (this._config.animation) {\n            this._renderer.removeClass(this._elementRef.nativeElement, 'show');\n        }\n        // Pause iframe/video when closing modal\n        const iframeElements = Array.from(this._elementRef.nativeElement.querySelectorAll('iframe'));\n        const videoElements = Array.from(this._elementRef.nativeElement.querySelectorAll('video'));\n        iframeElements.forEach((iframe) => {\n            const srcAttribute = iframe.getAttribute('src');\n            this._renderer.setAttribute(iframe, 'src', srcAttribute);\n        });\n        videoElements.forEach((video) => {\n            video.pause();\n        });\n    }\n    _restoreScrollbar() {\n        this._renderer.removeClass(this._document.body, 'modal-open');\n        this._renderer.removeStyle(this._document.body, 'padding-right');\n    }\n    attachComponentPortal(portal) {\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    attachTemplatePortal(portal) {\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n}\nMdbModalContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalContainerComponent, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.ConfigurableFocusTrapFactory }], target: i0.ɵɵFactoryTarget.Component });\nMdbModalContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.2\", type: MdbModalContainerComponent, selector: \"mdb-modal-container\", host: { properties: { \"class.modal\": \"this.modal\", \"class.fade\": \"this.hasAnimation\" } }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }, { propertyName: \"modalDialog\", first: true, predicate: [\"dialog\"], descendants: true, static: true }], ngImport: i0, template: \"<div #dialog [class]=\\\"'modal-dialog' + (_config.modalClass ? ' ' + _config.modalClass : '')\\\">\\n  <div class=\\\"modal-content\\\">\\n    <ng-template cdkPortalOutlet></ng-template>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mdb-modal-container', changeDetection: ChangeDetectionStrategy.Default, template: \"<div #dialog [class]=\\\"'modal-dialog' + (_config.modalClass ? ' ' + _config.modalClass : '')\\\">\\n  <div class=\\\"modal-content\\\">\\n    <ng-template cdkPortalOutlet></ng-template>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.ConfigurableFocusTrapFactory }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }], modalDialog: [{\n                type: ViewChild,\n                args: ['dialog', { static: true }]\n            }], modal: [{\n                type: HostBinding,\n                args: ['class.modal']\n            }], hasAnimation: [{\n                type: HostBinding,\n                args: ['class.fade']\n            }] } });\n\nclass MdbModalService {\n    constructor(_document, _overlay, _injector, _cfr) {\n        this._document = _document;\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._cfr = _cfr;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaultConfig = new MdbModalConfig();\n        config = config ? Object.assign(defaultConfig, config) : defaultConfig;\n        const overlayRef = this._createOverlay(config);\n        const container = this._createContainer(overlayRef, config);\n        const modalRef = this._createContent(componentOrTemplateRef, container, overlayRef, config);\n        this._registerListeners(modalRef, config, container);\n        return modalRef;\n    }\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    _getOverlayConfig(modalConfig) {\n        const config = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: this._overlay.scrollStrategies.noop(),\n            hasBackdrop: modalConfig.backdrop,\n            backdropClass: 'mdb-backdrop',\n        });\n        return config;\n    }\n    _createContainer(overlayRef, config) {\n        const portal = new ComponentPortal(MdbModalContainerComponent, null, this._injector, this._cfr);\n        const containerRef = overlayRef.attach(portal);\n        containerRef.instance._config = config;\n        return containerRef.instance;\n    }\n    _createContent(componentOrTemplate, container, overlayRef, config) {\n        const modalRef = new MdbModalRef(overlayRef, container);\n        if (componentOrTemplate instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplate, null, {\n                $implicit: config.data,\n                modalRef,\n            }));\n        }\n        else {\n            const injector = this._createInjector(config, modalRef, container);\n            const contentRef = container.attachComponentPortal(new ComponentPortal(componentOrTemplate, config.viewContainerRef, injector));\n            if (config.data) {\n                Object.assign(contentRef.instance, { ...config.data });\n            }\n        }\n        return modalRef;\n    }\n    _createInjector(config, modalRef, container) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: MdbModalContainerComponent, useValue: container },\n            { provide: MdbModalRef, useValue: modalRef },\n        ];\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    _registerListeners(modalRef, config, container) {\n        container.backdropClick$.pipe(take(1)).subscribe(() => {\n            modalRef.close();\n        });\n        if (config.keyboard) {\n            fromEvent(container._elementRef.nativeElement, 'keydown')\n                .pipe(filter((event) => {\n                return event.key === 'Escape';\n            }), take(1))\n                .subscribe(() => {\n                modalRef.close();\n            });\n        }\n    }\n}\nMdbModalService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalService, deps: [{ token: DOCUMENT }, { token: i1$1.Overlay }, { token: i0.Injector }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Injectable });\nMdbModalService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Overlay }, { type: i0.Injector }, { type: i0.ComponentFactoryResolver }]; } });\n\nclass MdbModalModule {\n}\nMdbModalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbModalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalModule, declarations: [MdbModalContainerComponent], imports: [OverlayModule, PortalModule], exports: [MdbModalContainerComponent] });\nMdbModalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalModule, providers: [MdbModalService], imports: [OverlayModule, PortalModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule],\n                    exports: [MdbModalContainerComponent],\n                    declarations: [MdbModalContainerComponent],\n                    providers: [MdbModalService],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbModalConfig, MdbModalContainerComponent, MdbModalModule, MdbModalRef, MdbModalService };\n//# sourceMappingURL=mdb-angular-ui-kit-modal.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}