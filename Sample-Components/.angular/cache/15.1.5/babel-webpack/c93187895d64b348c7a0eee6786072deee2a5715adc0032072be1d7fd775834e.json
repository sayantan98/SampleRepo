{"ast":null,"code":"import { AddEditEmployeeComponent } from '../add-edit/add-edit.component';\nimport { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared.service\";\nimport * as i2 from \"mdb-angular-ui-kit/modal\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"@angular/platform-browser\";\nimport * as i6 from \"@angular/common\";\nfunction ShowDelEmployeeComponent_tr_22_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", employee_r1.picFile, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ShowDelEmployeeComponent_tr_22_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"No pic uploaded till yet!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowDelEmployeeComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, ShowDelEmployeeComponent_tr_22_td_10_Template, 2, 1, \"td\", 6);\n    i0.ɵɵtemplate(11, ShowDelEmployeeComponent_tr_22_td_11_Template, 2, 0, \"td\", 6);\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ShowDelEmployeeComponent_tr_22_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.editClick(employee_r1));\n    });\n    i0.ɵɵelement(14, \"i\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \"\\u00A0\\u00A0\\u00A0 \");\n    i0.ɵɵelementStart(16, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ShowDelEmployeeComponent_tr_22_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const employee_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteClick(employee_r1.employeeId));\n    });\n    i0.ɵɵelement(17, \"i\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const employee_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.employeeId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.employeeName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.departmentName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 6, employee_r1.doj));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", employee_r1.profilePicture != \"saved\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", employee_r1.profilePicture == \"saved\");\n  }\n}\nexport class ShowDelEmployeeComponent {\n  constructor(apiService, modal, toast, loader, _sanitizer) {\n    this.apiService = apiService;\n    this.modal = modal;\n    this.toast = toast;\n    this.loader = loader;\n    this._sanitizer = _sanitizer;\n    this.modalRef = null;\n    this.emplist = [];\n    this.modalTitle = \"\";\n  }\n  ngOnInit() {\n    this.refreshEmpList();\n  }\n  refreshEmpList() {\n    this.loader.show();\n    this.apiService.GetEmployeeList().subscribe(res => {\n      this.emplist = res;\n      res.forEach(resEle => {\n        if (resEle.profilePicture != \"saved\") {\n          resEle.picFile = this._sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' + resEle.profilePicture);\n        }\n      });\n      this.loader.hide();\n    }, error => {\n      this.toast.error(error, \"Error!!!\");\n      this.loader.hide();\n    });\n  }\n  addClick() {\n    this.emp = {\n      employeeId: 0,\n      employeeName: \"\",\n      departmentId: 0,\n      departmentName: \"\",\n      doj: formatDate(new Date(), 'yyyy-MM-dd', 'en-US'),\n      profilePicture: \"\"\n    };\n    this.modalTitle = \"Add Employee\";\n    this.modalRef = this.modal.open(AddEditEmployeeComponent, {\n      data: {\n        emp: this.emp,\n        modalTitle: this.modalTitle\n      }\n    });\n    this.modalRef.onClose.subscribe(() => {\n      this.refreshEmpList();\n    });\n  }\n  editClick(item) {\n    this.emp = item;\n    this.emp.doj = formatDate(this.emp.doj, 'yyyy-MM-dd', 'en-US');\n    this.modalTitle = \"Edit Employee\";\n    this.modalRef = this.modal.open(AddEditEmployeeComponent, {\n      data: {\n        emp: this.emp,\n        modalTitle: this.modalTitle\n      }\n    });\n    this.modalRef.onClose.subscribe(() => {\n      this.refreshEmpList();\n    });\n  }\n  deleteClick(employeeId) {\n    this.loader.show();\n    this.apiService.DeleteEmployee(employeeId).subscribe(res => {\n      this.toast.success(res, \"Deleted Successfully\");\n      this.refreshEmpList();\n      this.loader.hide();\n    }, error => {\n      this.toast.success(error, \"Error!!!\");\n      this.loader.hide();\n    });\n  }\n}\nShowDelEmployeeComponent.ɵfac = function ShowDelEmployeeComponent_Factory(t) {\n  return new (t || ShowDelEmployeeComponent)(i0.ɵɵdirectiveInject(i1.SharedService), i0.ɵɵdirectiveInject(i2.MdbModalService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.NgxSpinnerService), i0.ɵɵdirectiveInject(i5.DomSanitizer));\n};\nShowDelEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowDelEmployeeComponent,\n  selectors: [[\"app-show-del-employee\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-3\"], [\"type\", \"button\", \"title\", \"add\", \"data-toggle\", \"modal\", \"data-target\", \"#exampleModal\", \"data-backdrop\", \"static\", \"data-keyboard\", \"false\", 1, \"btn\", \"btn-success\", \"alignright\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-plus\"], [1, \"table\", \"table-bordered\", \"table-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"type\", \"button\", \"title\", \"edit\", \"data-toggle\", \"modal\", \"data-target\", \"#exampleModal\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"fa-solid\", \"fa-pen-to-square\"], [\"type\", \"button\", \"title\", \"delete\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash\"], [\"height\", \"200px\", \"width\", \"150px\", 3, \"src\"]],\n  template: function ShowDelEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ShowDelEmployeeComponent_Template_button_click_1_listener() {\n        return ctx.addClick();\n      });\n      i0.ɵɵelement(2, \"i\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(3, \"br\")(4, \"br\")(5, \"br\");\n      i0.ɵɵelementStart(6, \"table\", 3)(7, \"thead\")(8, \"tr\")(9, \"th\", 4);\n      i0.ɵɵtext(10, \"Employee ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 4);\n      i0.ɵɵtext(12, \"Employee Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 4);\n      i0.ɵɵtext(14, \"Department Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 4);\n      i0.ɵɵtext(16, \"Date of Joining\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\", 4);\n      i0.ɵɵtext(18, \"Profile Picture\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\", 4);\n      i0.ɵɵtext(20, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"tbody\");\n      i0.ɵɵtemplate(22, ShowDelEmployeeComponent_tr_22_Template, 18, 8, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", ctx.emplist);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i6.DatePipe],\n  styles: [\".alignright[_ngcontent-%COMP%]{\\r\\n    float: right;\\r\\n    margin-right: 2em;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1wbG95ZWUvc2hvdy1kZWwvc2hvdy1kZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxpZ25yaWdodHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIG1hcmdpbi1yaWdodDogMmVtO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["AddEditEmployeeComponent","formatDate","i0","ShowDelEmployeeComponent","constructor","apiService","modal","toast","loader","_sanitizer","ngOnInit","refreshEmpList","show","GetEmployeeList","subscribe","res","emplist","forEach","resEle","profilePicture","picFile","bypassSecurityTrustResourceUrl","hide","error","addClick","emp","employeeId","employeeName","departmentId","departmentName","doj","Date","modalTitle","modalRef","open","data","onClose","editClick","item","deleteClick","DeleteEmployee","success","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Upskill\\PracticeProjects\\Sample-Components\\src\\app\\employee\\show-del\\show-del.component.ts","D:\\Upskill\\PracticeProjects\\Sample-Components\\src\\app\\employee\\show-del\\show-del.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SharedService } from 'src/app/shared.service';\nimport { MdbModalRef, MdbModalService } from 'mdb-angular-ui-kit/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AddEditEmployeeComponent } from '../add-edit/add-edit.component';\nimport { formatDate } from '@angular/common';\nimport { DatePipe } from '@angular/common';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-show-del-employee',\n  templateUrl: './show-del.component.html',\n  styleUrls: ['./show-del.component.css']\n})\nexport class ShowDelEmployeeComponent {\n  constructor(private apiService: SharedService, private modal: MdbModalService, private toast: ToastrService, private loader: NgxSpinnerService,private _sanitizer: DomSanitizer){\n\n  }\n  modalRef: MdbModalRef<AddEditEmployeeComponent> | null = null\n  emplist: any = [];\n  emp: any;\n  modalTitle: any = \"\";\n  ngOnInit(): void{\n    this.refreshEmpList();\n  }\n  refreshEmpList(){\n    this.loader.show();\n      this.apiService.GetEmployeeList().subscribe(res =>{\n        this.emplist = res;\n        res.forEach(resEle => {\n          if(resEle.profilePicture!=\"saved\"){\n            resEle.picFile = this._sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' \n          + resEle.profilePicture);\n\n          }\n        });\n        \n        this.loader.hide();\n      },\n      error => {\n        this.toast.error(error,\"Error!!!\");\n        this.loader.hide();\n      }\n    )\n  }\n  addClick(){\n    this.emp = {\n      employeeId: 0,\n      employeeName: \"\",\n      departmentId: 0,\n      departmentName: \"\",\n      doj: formatDate(new Date, 'yyyy-MM-dd', 'en-US'),\n      profilePicture: \"\"\n    };\n    this.modalTitle = \"Add Employee\";\n    this.modalRef = this.modal.open(AddEditEmployeeComponent,{\n      data: {\n        emp: this.emp,\n        modalTitle: this.modalTitle\n      }\n    });\n    this.modalRef.onClose.subscribe(()=>{\n      this.refreshEmpList();\n    });\n  }\n  editClick(item: any){\n    this.emp = item;\n    this.emp.doj = formatDate(this.emp.doj, 'yyyy-MM-dd', 'en-US');\n    this.modalTitle = \"Edit Employee\";\n    this.modalRef = this.modal.open(AddEditEmployeeComponent,{\n      data: {\n        emp: this.emp,\n        modalTitle: this.modalTitle\n      }\n    });\n    this.modalRef.onClose.subscribe(()=>{\n      this.refreshEmpList();\n    });\n  }\n  deleteClick(employeeId: any){\n    this.loader.show();\n    this.apiService.DeleteEmployee(employeeId).subscribe(res =>{\n      this.toast.success(res, \"Deleted Successfully\");\n      this.refreshEmpList();\n      this.loader.hide();\n    },\n    error =>{\n      this.toast.success(error, \"Error!!!\");\n      this.loader.hide();\n    }\n    )\n  }\n\n\n}\n","<!-- Button trigger modal -->\n<div class=\"container mt-3\">\n    <button type=\"button\" class=\"btn btn-success alignright\" title=\"add\" data-toggle=\"modal\" data-target=\"#exampleModal\" data-backdrop=\"static\" data-keyboard=\"false\" (click)=\"addClick()\">\n        <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n      </button>\n</div>\n  <br /><br /><br />\n<table class=\"table table-bordered table-dark\">\n    <thead>\n        <tr>\n            <th scope=\"col\">Employee ID</th>\n            <th scope=\"col\">Employee Name</th>\n            <th scope=\"col\">Department Name</th>\n            <th scope=\"col\">Date of Joining</th>\n            <th scope=\"col\">Profile Picture</th>\n            <th scope=\"col\">Action</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let employee of emplist\">\n            <td>{{employee.employeeId}}</td>\n            <td>{{employee.employeeName}}</td>\n            <td>{{employee.departmentName}}</td>\n            <td>{{employee.doj | date}}</td>\n            <td *ngIf='employee.profilePicture!=\"saved\"'><img [src]=\"employee.picFile\" height=\"200px\" width=\"150px\"></td>\n            <td *ngIf='employee.profilePicture==\"saved\"'>No pic uploaded till yet!!</td>\n            <td>\n                <button type=\"button\" class=\"btn btn-success\" title=\"edit\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click)=\"editClick(employee)\">\n                    <i class=\"fa-solid fa-pen-to-square\"></i>\n                </button>&nbsp;&nbsp;&nbsp;\n                <button type=\"button\" class=\"btn btn-danger\" title=\"delete\" (click)=\"deleteClick(employee.employeeId)\">\n                    <i class=\"fa-solid fa-trash\"></i>\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}